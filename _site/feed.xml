<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Journey to the Code blog</title>
    <description>I want to build my own blog, so this is it.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 09 Feb 2017 23:51:53 +1300</pubDate>
    <lastBuildDate>Thu, 09 Feb 2017 23:51:53 +1300</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Go for a walk with Jekyll on a cloudy day: Part 1</title>
        <description>&lt;h3&gt;Part 1: Deploy Jekyll on Azure&lt;/h3&gt;
&lt;p&gt; When I planned to create this blog, I also planned cloud-based my blog, this would be a piece of cake if I used WordPress because Azure with DreamSpark subscription allow the user to “one-click deploy” a WordPress on Azure. Jekyll is totally different (This is Jekyll on Azure, not GitHub-Pages)..&lt;/p&gt;

&lt;p&gt;Azure allow you to deploy by Git CLI (locally), as well as, continuous deployment with GitHub repo, but like GitHub-Pages, you can’t access the static files such as a JSON data file when your page is deploying, per my own experiences on my blog page in 5 cases after following those solutions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://channel9.msdn.com/Blogs/WinCoder/Develop-and-Deploy-Jekyll-Static-Blog-to-Azure-from-Visual-Studio-Code-with-Bash-on-Ubuntu-on-Window&quot;&gt;Channel 9 Develop and Deploy Jekyll Static Blog to Azure from Visual Studio with Bash on Ubuntu on Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gordon-breuer.de/azure/2016/03/01/Publish-a-website-with-Jekyll-and-Github-on-Windows-Azure.html&quot;&gt;Publish a website with Jekyll using extention on Azure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hintcoding.azurewebsites.net/azure/2016/04/16/deploy-jekyll-azure-app-service-one.html&quot;&gt;Deploy Jekyll Azure App Service&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is scenarios summarizing table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Scenarios&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Built Status&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;#Scenario1&quot;&gt;1&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Used built in Jekyll extension on Azure&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Fail&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;#Scenario2&quot;&gt;2&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Not used built in Jekyll extension, using &lt;strong&gt;Git CLI&lt;/strong&gt;  and &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.cmd&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;getruby.cmd&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Success&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;#Scenario3&quot;&gt;3&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Used built in Jekyll extension without &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.cmd&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;getruby.cmd&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Fail&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;#Scenario4&quot;&gt;4&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Used &lt;code class=&quot;highlighter-rouge&quot;&gt;.deployment&lt;/code&gt; without extension&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Success&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;#Scenario5&quot;&gt;5&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Continuous deployment of Scenario 4 on GitHub repo&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Success&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;#Conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The very first step you need to setup a Azure App Service&lt;/p&gt;
&lt;p&gt;When you successed, this is how the Web root look like&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/Azure%20first%20init.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/Azure%20first%20init.jpg&quot; border=&quot;0&quot; alt=&quot; photo Azure first init.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;Scenario1&quot;&gt;&lt;h3&gt;Scenario 1: Used built in Jekyll extension on Azure&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;Step 2: install Jekyll extension&lt;/p&gt;
&lt;p&gt;In your Web App, go to Extension&amp;gt;Add&amp;gt;Jekyll.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/add%20jekyll%20extention.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/add%20jekyll%20extention.jpg&quot; border=&quot;0&quot; alt=&quot; photo add jekyll extention.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is how the root look like with Extension added&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/Jekyll%20extention.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/Jekyll%20extention.jpg&quot; border=&quot;0&quot; alt=&quot; photo Jekyll extention.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 3: Push and the Error&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/error%20deployment%20failse.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/error%20deployment%20failse.jpg&quot; border=&quot;0&quot; alt=&quot; photo error deployment failse.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;Scenario2&quot;&gt;&lt;h3&gt;Scenario 2: Not used built in Jekyll extension, using **Git CLI**  and `deploy.cmd` and `getruby.cmd`&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;When you push, Kudu is smart enough to using &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.cmd&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;getruby.cmd&lt;/code&gt; to setup evething up for you on the cloud like running in localhost environment with &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;And this is how the root look&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/noextentiondeploy.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/noextentiondeploy.jpg&quot; border=&quot;0&quot; alt=&quot; photo noextentiondeploy.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;Scenario3&quot;&gt;&lt;h3&gt;Scenario 3: Used built in Jekyll extension without `deploy.cmd` and `getruby.cmd`&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;after push the error page similar with Scenario 1, which is confict Ruby version.&lt;/p&gt;

&lt;div id=&quot;Scenario4&quot;&gt;&lt;h3&gt;Scenario 4: Used `.deployment` without extension&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;[config] &lt;br /&gt;
project = _site&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;this 2 lines of code in `.deployment` are enough for Kudu to deploy your rendered page in _site folder.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/PureJekyll.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/PureJekyll.jpg&quot; border=&quot;0&quot; alt=&quot; photo PureJekyll.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&quot;Scenario5&quot;&gt;&lt;h3&gt;Scenario 5: Continuous deployment of Scenario 4 on GitHub repo&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;On your App go to Deployment option choose GitHub and branch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/github%20with%20pure%20jekyll.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/github%20with%20pure%20jekyll.jpg&quot; border=&quot;0&quot; alt=&quot; photo github with pure jekyll.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Azure will automatically deploy your code after every commit you push on that branch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s498.photobucket.com/user/tom0313/media/Blog%20post/JekyllandClouds/continues%20deploy.jpg.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i498.photobucket.com/albums/rr350/tom0313/Blog%20post/JekyllandClouds/continues%20deploy.jpg&quot; border=&quot;0&quot; alt=&quot; photo continues deploy.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;Conclusion&quot;&gt;&lt;h3&gt;Conclusion&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;The fail of Scenario 1 and 3 are cause by the confict of Ruby version of Jekyll’s runtime dependency on the server lead to not found the required bundler.&lt;/p&gt;

&lt;p&gt;Kudu is smart enough for deploy a hold environment or just a static files folder like scenario 2  and 4. Azure’s feature: continuous deployment is very handy for deploying code from GitHub.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Feb 2017 00:00:00 +1300</pubDate>
        <link>http://localhost:4000/2017/02/06/Go-for-a-walk-with-Jekyll-on-a-Cloudy-day-part-1/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/06/Go-for-a-walk-with-Jekyll-on-a-Cloudy-day-part-1/</guid>
        
        
        <category></category>
        
      </item>
    
      <item>
        <title>Why I chose Jekyll for my blog</title>
        <description>&lt;p&gt;
Well, since I choose Jekyll and GitHub-Pages to build up my own blog platform, my consideration includes many free, well-known CMS solutions such as WordPress, Joomla, Drupal …etc. However, I think I need an x-factor for myself, something makes me unique from a thousand bloggers out there (well, I can’t compare myself with English native speakers of course). &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.orkestra.deusto.es/images/actualidad/blog-redes-sociales/blog.png&quot; alt=&quot;Blogging&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Blogging like a programmer or some article said blogging like a hacker. It sound serious, but if you try to remove the “marketing buzzwords” and get your hand dirty on Jekyll you need to code your own blog from scratch, a _blank page, now it sounds like Umbraco isn’t it, uhm...yeah, kind of but you need to fluent in Command Line Interface (CLI) now it sound scarier because most of the students learn, study and practice on Windows environment, a beautiful GUI environment with limited using CLI that make Git sound scary, read until here you may got my point, CLI will make me stand out :fingersCrossed:.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.girliemac.com/assets/images/articles/2013/12/jekyll.png&quot; alt=&quot;Jekyll&quot; /&gt;&lt;/p&gt;
&lt;p&gt;So, what is Jekyll? Jekyll is a simple, blog-aware, static site generator for personal, project, or organization sites. Written in Ruby by Tom Preston-Werner, GitHub's co-founder, it is distributed under an open source license (Wikipedia). That why GitHub-Pages dependencies runtime require Jekyll, and by the way, GitHub-Pages is a gem in RubyGems.org.
To dive in Jekyll for a Windows user, you need to set up Ruby environment locally with Chocolatey or Bash on Ubuntu on Window a built-in app on Windows 10 version 1607, for easy to develop and test, and use Git CLI for branching and deploying Jekyll to GitHub repo.
That’s it, that is how I choose and develop this blog on Jekyll, but wait a minute! ... There are thousands of developers out there using Jekyll and GitHub-Pages for their blog already, and I am too late, well that’s a drawback of not born sooner :(

&lt;p&gt;Meditating …&lt;/p&gt;
&lt;img src=&quot;http://www.goodhealthbuzz.com/wp-content/uploads/2014/04/meditate_2.jpg&quot; /&gt; 
 &lt;p&gt;I should challenge myself, I can make something different from them. Obviously, this is Clouds era and JavaScript frameworks, the churn of those techs make old folks hesitate to apply it to their blog. I got youth and stupidity, that the advantage of not born sooner :) to experience and establish on my blog. Luckily, I got a DreamSpark account for experience Azure, I also lost some “stupidity fee” for AWS when I tried free tier S3 with route 53. Everything seems to be ok, that the journey I chose.
 &lt;p&gt;
“The Journey is the reward” – Steve Jobs&lt;/p&gt;
&lt;img src=&quot;http://talentdevelop.com/WordPress/wp-content/uploads/2014/03/Steve-Jobs-Think-Different.jpg&quot; /&gt;  
&lt;/p&gt;
&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Feb 2017 00:00:00 +1300</pubDate>
        <link>http://localhost:4000/2017/02/04/Jekyll-I-choose-you/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/04/Jekyll-I-choose-you/</guid>
        
        
        <category></category>
        
      </item>
    
      <item>
        <title>Coming soon</title>
        <description>&lt;p&gt;Coming soon&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Nov 2016 00:00:00 +1300</pubDate>
        <link>http://localhost:4000/2016/11/22/welcome-to-Toms-blog/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/22/welcome-to-Toms-blog/</guid>
        
        
      </item>
    
      <item>
        <title>First post</title>
        <description>&lt;p&gt;“I would advise folks in software to do one thing, and that’s write. Learn how to write…It’s actually useful. You need to know how to express yourself. And it’s really tough for a lot of engineers to step up and do public speaking.”&lt;/p&gt;

&lt;p&gt;“You don’t need to stop being a hardcore coder. Just add a little sprinkle of skills to express yourself.”&lt;/p&gt;

&lt;p&gt;Mike Borozdin, an ex-Microsoft engineer.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Nov 2016 00:00:00 +1300</pubDate>
        <link>http://localhost:4000/2016/11/18/why-you-need-to-start-blogging/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/18/why-you-need-to-start-blogging/</guid>
        
        
      </item>
    
  </channel>
</rss>

